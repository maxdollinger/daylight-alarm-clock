{"version":3,"sources":["components/clock.jsx","requests.js","redux/ledReducer.js","components/pwmSlider.jsx","components/iosSwitch.jsx","components/turnOnOff.jsx","components/ledControll.jsx","App.js","redux/store.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","heading","textAlign","padding","fontSize","fontWeight","timeString","time","getHours","num","getMinutes","dateString","toLocaleDateString","weekday","month","day","year","Clock","classes","useState","Date","now","setTime","useEffect","iv","setInterval","clearInterval","Grid","container","item","xs","className","path","url","window","location","hostname","ledRequests","a","data","method","fetch","Request","json","headers","body","JSON","stringify","getLedBrightness","dispatch","getState","brightness","dimm","postLedBrightness","value","console","log","ledSlice","createSlice","name","initialState","status","reducers","state","action","payload","turnOn","turnOff","getBrightness","led","actions","root","display","height","slider","margin","maxWidth","PwmSlider","useDispatch","pwm","useSelector","val","setVal","Slider","onChangeCommitted","_","onChange","valueLabelDisplay","step","min","max","withStyles","theme","width","spacing","overflow","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","flexDirection","col","TurnOnOff","LedController","maxHeight","App","Paper","elevation","configureStore","reducer","ledReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.980cdef1.chunk.js","sourcesContent":["import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  heading: {\r\n    textAlign: \"center\",\r\n    padding: \"10px\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst padStart = (num) => {\r\n    return num < 10 ? \"0\"+num : num;\r\n}\r\n\r\nconst timeString = time => {\r\n    return `${time.getHours()}:${padStart(time.getMinutes())} Uhr`\r\n}\r\n\r\nconst dateString = time => {\r\n    const options = { weekday: 'long', month: 'numeric', day: 'numeric', year: 'numeric' };\r\n    return time. toLocaleDateString('de-DE', options)\r\n}\r\n\r\nexport default function Clock() {\r\n  const classes = useStyles();\r\n  const [time, setTime] = useState(new Date(Date.now()));\r\n\r\n  useEffect( () => {\r\n      const iv = setInterval(() => setTime(new Date(Date.now())), 1000);\r\n\r\n      return () => clearInterval(iv)\r\n  },[])\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} className={classes.heading}>\r\n        {dateString(time)}<br />\r\n        {timeString(time)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","const url = `http://${window.location.hostname}:8000/api`;\r\n\r\nconst requestFactory = path => async (data = '', method = \"GET\") => {\r\n    if (method === 'GET') {\r\n        return (await window.fetch(new Request(url + path + data, { method }))).json();\r\n    }\r\n    if (method === 'POST') {\r\n        return (await window.fetch(new Request(url + path, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }))).json();\r\n    }\r\n}\r\n\r\nexport const ledRequests = requestFactory('/led');","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ledRequests } from '../requests.js';\r\n\r\nexport const getLedBrightness = () => async (dispatch, getState) => {\r\n  const brightness = (await ledRequests()).data;\r\n  dispatch(dimm(brightness));\r\n}\r\n\r\nexport const postLedBrightness = (value) => async (dispatch, getState) => {\r\n  const brightness = (await ledRequests({brightness: value}, 'POST')).data;\r\n  console.log(brightness);\r\n  dispatch(dimm(brightness));\r\n}\r\n\r\nexport const ledSlice = createSlice({\r\n  name: 'led',\r\n  initialState: {\r\n    status: 'off',\r\n    brightness: 0\r\n  },\r\n  reducers: {\r\n    dimm: (state, action) => {\r\n        state.brightness = action.payload;\r\n\r\n        if(state.brightness === 0) {\r\n          state.status = 'off'\r\n        } else {\r\n          state.status = 'on'\r\n        }\r\n      }\r\n    },\r\n    turnOn: state => {\r\n      state.brightness = 100;\r\n      state.status = 'on';\r\n    },\r\n    turnOff: state => {\r\n      state.brightness = 0;\r\n      state.status = 'off';\r\n    }\r\n  }\r\n)\r\n\r\nexport const getBrightness = state => state.led.brightness;\r\n\r\nexport const { dimm, turnOn, turnOff } = ledSlice.actions\r\n\r\nexport default ledSlice.reducer","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBrightness, postLedBrightness } from \"../redux/ledReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    padding: '0 20px',\r\n  },\r\n  slider: {\r\n      margin: 'auto',\r\n      display: 'flex',\r\n      maxWidth: '350px',\r\n  }\r\n});\r\n\r\nexport default function PwmSlider() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const pwm = useSelector(getBrightness);\r\n  const [val, setVal] = useState(pwm);\r\n\r\n  useEffect(() => {\r\n      setVal(pwm);\r\n  }, [pwm]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        onChangeCommitted={(_, value) => {\r\n          dispatch(postLedBrightness(value));\r\n        }}\r\n        onChange={ (_, value) => setVal(value)}\r\n        value={val}\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        min={0}\r\n        max={100}\r\n        className={classes.slider}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default withStyles((theme) => ({\r\n    root: {\r\n      width: 48,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1),\r\n      overflow: \"visible\",\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      \"&$checked\": {\r\n        transform: \"translateX(22px)\",\r\n        color: theme.palette.common.white,\r\n        \"& + $track\": {\r\n          backgroundColor: \"#52d869\",\r\n          opacity: 1,\r\n          border: \"none\",\r\n        },\r\n      },\r\n      \"&$focusVisible $thumb\": {\r\n        color: \"#52d869\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor: theme.palette.grey[50],\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\", \"border\"]),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n  }))(({ classes, ...props }) => {\r\n    return (\r\n      <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n          root: classes.root,\r\n          switchBase: classes.switchBase,\r\n          thumb: classes.thumb,\r\n          track: classes.track,\r\n          checked: classes.checked,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IOSSwitch from \"./iosSwitch\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postLedBrightness } from \"../redux/ledReducer\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: \"120px\",\r\n    textAlign: \"right\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  col: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function TurnOnOff() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const status = useSelector((state) => state.led.status);\r\n\r\n  const handleChange = () => {\r\n    if (status === \"off\") {\r\n        dispatch(postLedBrightness(100));\r\n    } else if (status === \"on\") {\r\n        dispatch(postLedBrightness(0));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.col}>LEDs:</div>\r\n      <div className={classes.col}>\r\n        <IOSSwitch onChange={handleChange} checked={status === \"on\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, makeStyles } from '@material-ui/core'\r\nimport PwmSlider from './pwmSlider';\r\nimport TurnOnOff from './turnOnOff';\r\n\r\nconst useStyles = makeStyles( () => ({\r\n  heading: {\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'bold',\r\n  }\r\n}));\r\n\r\nexport default function LedController() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.heading}>\r\n            LED Steuerung\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TurnOnOff/>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <PwmSlider />\r\n          </Grid>\r\n        </Grid>\r\n  );\r\n}\r\n","import '@fontsource/roboto';\nimport { makeStyles, Paper } from '@material-ui/core'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Clock from './components/clock';\nimport LedController from './components/ledControll';\nimport { getLedBrightness } from './redux/ledReducer';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    // height: \"90%\",\n    maxHeight: \"600px\",\n    width: \"90%\",\n    maxWidth: \"600px\",\n    margin: \"auto\",\n    padding: '15px',\n  },\n  heading: {\n    textAlign: 'center',\n    padding: '10px',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLedBrightness());\n\n    const iv = setInterval(() => {\n      dispatch(getLedBrightness());\n    }, 2000);\n\n    return () => clearInterval(iv);\n  },[]);\n\n  return (\n    <Paper elevation={4} className={classes.root}>\n      <Clock />\n      <LedController />\n    </Paper>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport ledReducer from './ledReducer';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    led: ledReducer\r\n  }\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}